%% plugins
{plugins, [rebar3_hex, rebar3_elixir,
    {rebar_raw_resource, {git, "https://github.com/alertlogic/rebar_raw_resource", {branch, "master"}}}
]}.


{erl_first_files, [
    "src/modules/models/model_behaviour.erl",
    "src/rest/rest_behaviour.erl",
    "src/services/service_behaviour.erl"
]}.

{erl_opts, [
    fail_on_warning
]}.

{eunit_opts, [
    verbose,
    {report, {eunit_surefire, [{dir, "./test/eunit_results"}]}}
]}.

{cover_enabled, true}.

{dialyzer, [
    {warnings, [error_handling, unknown]},
    {plt_extra_apps, [
        mnesia, ssl, ctool, ranch, cowboy, onenv_ct, yamerl, xmerl, jiffy,
        base64url, ssl_verify_fun, macaroons
    ]}
]}.

{deps, [
    {compatibility_reference, {raw, {git, "ssh://git@git.onedata.org:7999/vfs/compatibility-reference.git", {ref, "e5c49629761a"}}}},
    {ctool, {git, "ssh://git@git.onedata.org:7999/vfs/ctool.git", {ref, "f5e3c7e44378"}}},
    {gui, {git, "ssh://git@git.onedata.org:7999/vfs/gui.git", {ref, "aacd9973bd0f"}}},
    {onenv_ct, {git, "ssh://git@git.onedata.org:7999/vfs/onenv-ct.git", {ref, "84395054ef0e"}}}
]}.

{pre_hooks, [
    {eunit, "mkdir -p test/eunit_results"}
]}.

{post_hooks, [
    {release, "rm -f _build/*/rel/*/bin/install_upgrade.escript"},
    {release, "rm -f _build/*/rel/*/bin/nodetool"},
    {release, "rm -f _build/*/rel/*/bin/onepanel-*"},
    {release, "rm -f _build/*/rel/*/bin/start_clean.boot"},
    {release, "rm -f _build/*/rel/*/bin/no_dot_erlang.boot"}
]}.

{clean_files, [
    "./test/eunit_results",
    "./test_distributed/logs/*",
    "./test_distributed/*.beam"
]}.

%% relx configuration
{relx, [
    {release, {{{release_name}}, "1.0.0"},
        [
            kernel,
            stdlib,
            public_key,
            crypto,
            mnesia,
            ctool,
            gui,
            %% deps included by default by reltool but not included by relx
            {base64url, load},
            {common_test, load},
            {debugger, load},
            {edoc, load},
            {enacl, load},
            {erts, load},
            {et, load},
            {eunit, load},
            {iso8601, load},
            {jiffy, load},
            {macaroons, load},
            {meck, load},
            {observer, load},
            {runtime_tools, load},
            {sasl, load},
            {snmp, load},
            {ssh, load},
            {tools, load},
            {wx, load},
            {xmerl, load},
            {yamerl, load},
            onepanel
        ]},

    {vm_args, "rel/files/vm.args"},
    {sys_config, "rel/files/app.config"},
    {include_src, false},
    {dev_mode, true},
    % NOTE: {dev_mode, true} expands implicitly to {include_erts, false},
    % so we need this line AFTER the dev mode to override this setting
    {include_erts, true},

    {overlay, [
        %% Copy base files for starting and interacting with node
        {copy, "node_package/priv/base/erl", "erts-{{erts_vsn}}/bin/erl"},
        {copy, "node_package/priv/base/nodetool", "erts-{{erts_vsn}}/bin/nodetool"},
        {template, "node_package/priv/base/runner", "bin/{{release_name}}"},
        {template, "node_package/priv/base/env.sh", "lib/env.sh"},

        %% Copy config files
        {mkdir, "etc"},
        {copy, "rel/files/config.d", "etc/"},
        {template, "rel/files/autogenerated.config", "etc/autogenerated.config"},
        {template, "rel/files/autogenerated.vm.args", "etc/autogenerated.vm.args"},

        %% Copy cert dirs
        {copy, "rel/files/certs", "etc/"},
        {copy, "rel/files/cacerts", "etc/"},

        % Copy the compatibility reference:
        %   1) Default compatibility reference for this software version
        {copy,
            "_build/default/lib/compatibility_reference/compatibility.json",
            "./data/compatibility.default.json"
        },
        %   2) Placeholder for the dynamic compatibility file that can be
        %      overwritten by a newer registry when such is available. Will not
        %      overwrite the older one in case of upgrade, as the etc dir is
        %      persisted.
        {copy,
            "_build/default/lib/compatibility_reference/compatibility.json",
            "./etc/compatibility.json"
        },

        %% Copy additional data files
        {mkdir, "data"},
        {copy, "LICENSE.txt", "data/"},
        {copy, "rel/files/OnedataTestWebServerCa.pem", "etc/"},
        {template, "rel/files/app.config", "./data/app.config"},
        {template, "rel/files/vm.args", "./data/vm.args"},

        % Onepanel GUI static files
        {copy, "_build/default/lib/gui_static.tar.gz", "./data/"}
    ]},

    {extended_start_script, true}
]}.

%% Profiles configuration
{profiles, [
    {package, [
        {relx, [{dev_mode, false}]}
    ]},
    {bamboo_default_rel, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf _build/default/rel/onepanel"},
            {release, "mkdir -p _build/default/rel"},
            {release, "mv -f _build/bamboo_default_rel/rel/onepanel _build/default/rel/onepanel"},
            {release, "rm -rf _build/default/lib/onepanel"},
            {release, "mv -f _build/bamboo_default_rel/lib/onepanel _build/default/lib"}
        ]}
    ]},
    {bamboo_oz_rel, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf _build/default/rel/oz_panel"},
            {release, "mkdir -p _build/default/rel"},
            {release, "mv -f _build/bamboo_oz_rel/rel/oz_panel _build/default/rel/oz_panel"},
            {release, "rm -rf _build/default/lib/onepanel"},
            {release, "mv -f _build/bamboo_oz_rel/lib/onepanel _build/default/lib"}
        ]}
    ]},
    {bamboo_op_rel, [
        {relx, [{dev_mode, false}]},
        {post_hooks, [
            {release, "rm -rf _build/default/rel/op_panel"},
            {release, "mkdir -p _build/default/rel"},
            {release, "mv -f _build/bamboo_op_rel/rel/op_panel _build/default/rel/op_panel"},
            {release, "rm -rf _build/default/lib/onepanel"},
            {release, "mv -f _build/bamboo_op_rel/lib/onepanel _build/default/lib"}
        ]}
    ]}
]}.

